sh.blog (pronounced shell blog) is designed as a blog that you can edit and update from a shell. There is only an index.php page, and then a bunch of text files that serve as a database. There is also an executible file (not public) that will look at the text files and use them to create 3 'meta' pages: the index page, the 'all posts' page, and the 'all images' page. Blog posts are created by text files named x_y.sbf, where x is an int indicating the category number, and y is an int indicating the post number. Following is a sample post:

The first line is the title
Published Feb 07, 2013 (this will appear right under the title)
Last Modified Feb 09, 2013 (this goes at the end of the blog post)
p: starting a line with 'p:' will insert a paragraph into the blog post. it's just a string and is printed directly to the html, so one can use html tags <b>like this for example</b>. Starting a line with 'i:' will cause an image to be posted. The syntax for the i line: first use 3 characters identifying the image, and then put a string that will be used as the image alt.
i: 000 This is an example image alt
i: 001 Tricky image!
p: when using images, you need to upload 2 copies of each image to the server. The first is a .jpg with the name dvp_xxxs.jpg, where the xxx is replaced by the 3 characters used in the 'i:' statement. The .jpg should be 440 pixels wide so the formatting looks nice. The second is named dvp_xxx.png, so that readers can view and download a full version of the image.
h: Section disection
p: starting the line with 'h:' will give parts of the post an extra title. This title is smaller than the overall page title, but larger than the dates.
p: the index page works by loading a page according to its category and post number (retrived from $_GET). The index page will look at the text file, parse it, and then generate the page. index.php should gracefully handle any bad input from the $_GET variable.
p: the executable works by looking at two files, one file which it uses to generate the index sbf (0_0.sbf), and one file which it uses to associate category numbers with category names (needed to generate the 'all_pages' file). At some point I hope to figure out an efficeint way to combine these files. Here are the examples:

This is the title to the Index generator page, it's called guide_index.txt
Last Modified: Since it's only a string, you can change what it says
normally this field will be empty for the index page. After this is a series of lines indicating which pages you would like to be previewed on the index page.
1_0.sbf
2_0.sbf

this is guide_categories.txt, this is category 0
this is category '1'
and so on, up to 9

There are a few errors/limitations. First, the category can only be 1 digit, which limits you to a total of 10 categories. I like the idea of being limited to 10 categories, but I think that the next version of sh.blog will adjust to remove this limitation

The heart of this blog is driven by minimalism. I am currently unhappy with much of it's structure, but it is missing many of the features found in a platform like Wordpress because I do not want such features (example: commenting). I would like to add RSS compatibility at some point.

I welcome any contributions but reserve the right to reject any features or modifications that I do not feel contribute to the overall goals of minimalism, ease-of-use, and code-readability. One area that I could use help in is with commenting my code. I find it difficult to make meaninful comments because I don't know which parts of the code will cause other people confusion, and which parts are being overexplained. 
